封装性
两层意思：
类里边封装了对象所需要的属性和方法；
对象的属性不应该通过对象名.属性的方式直接访问；

class Person{
   int age;
   public void shout(){
         System.out.println(age);
   }
}

class TestPerson{
    public static void main(String[] args){
       Person p=new Person();
        p.age=-30;
}
}

显然，这个通过直接访问对象属性的方式会带来一定的危险性。
引入了private 修饰符

class Person{
    private int age;
   public void shout(){
         System.out.println(age);
   }
}

class TestPerson{
    public static void main(String[] args){
       Person p=new Person();
        p.age=-30;
}
}

这样就能避免直接访问对象的属性了。
但是，对象属性我们一定还是要设置的，怎么办？

我们可以通过访问对象方法，让对象方法再访问对象属性。

class Person{
    private int age;
    public void setAge(int i){
         if(i<0 || i>130){
             return;
         else 
              age=i;
      }
    public int getAge(){
          return age;
    }
       public void shout(){
         System.out.println(age);
   }
}

public class TestPerson{
     public static void main(String[] args){
          Person p1=new Person();
          p1.setAge(3);
          p1.setAge(-6);
          System.out.println(p1.getAge());
    }
}

